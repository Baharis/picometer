# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Continuous Integration and Deployment

on:
  push:
    branches: [ "master", "development" ]
  pull_request:
    branches: [ "master", "development" ]

permissions:
  contents: read

jobs:
  continuous-integration:

    runs-on: ubuntu-latest

    steps:
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Check-out repository
      uses: actions/checkout@v3

    - name: Install poetry
      uses: snok/install-poetry@v1

    - name: Install package
      run: poetry install --with dev

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Test with pytest
      run: poetry run pytest tests/ --cov=picometer --cov-report=xml

    - name: Use Codecov to track coverage
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        files: ./coverage.xml   # coverage report

    - name: Build documentation
      run: poetry run make html --directory docs/

#  continuous-deployment:
#    # Only run this job if the "ci" job passes
#    needs: continuous-integration
#
#    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
#
#    # Set up operating system
#    runs-on: ubuntu-latest
#
#    # Define job steps
#    steps:
#    - name: Set up Python 3.10
#      uses: actions/setup-python@v4
#      with:
#        python-version: 3.10
#
#    - name: Check-out repository
#      uses: actions/checkout@v3
#      with:
#        fetch-depth: 0