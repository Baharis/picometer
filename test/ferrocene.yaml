---
# 0
load:
  - path: ./ferrocene1.cif
  - path: ./ferrocene2.cif
  - path: ./ferrocene3.cif
  - path: ./ferrocene4.cif
  - path: ./ferrocene5.cif
  - path: ./ferrocene6.cif
---
# 1
alias: iron
from:
  - name: Fe1
---
# 2
alias: cpa_A
from:
  - name: C.+
---
# 3
alias: cpa_B
from:
  - name: cpa_A
    symm: -x,-y,-z
---
# Define a 'centroid' of selected objects (or their aliases)
centroid: benzene_A_centroid
from: 
  - name: benzene_A
---
# Define a 'line' passing through selected nodes (atoms or centroids)
line: benzene_axis
from:
  - name: benzene_A_centroid
  - name: Fe1
---
# Define a 'plane' in the same way.
plane: benzene_A_plane
from:
  - benzene_A
---
# For the time being, each routine must include at most one definition
centroid: benzene_B_centroid
from:
  - benzene_B
---
plane: benzene_B_plane
from:
  - benzene_B
---
# Keyword 'at' can be used to translate origin of the shape
plane: benzene_A_plane_at_iron
from:
  - name: benzene_A
at: iron
---
# Keyword 'at' can be also used to temporarily move centroid of selection
plane: benzene_common_plane_at_A
from:
  - name: benzene_A
  - name: benzene_B
    at: benzene_A_centroid
---
# Instead of selecting and fitting shape each time, you can 'copy' existing one
plane: benzene_common_plane_at_B
copy: benzene_common_plane_at_A
at: benzene_B_centroid
---
# Use keyword 'distance' to calculate distance between two selected objects
distance: C1-C6
from:
  - name: C1
  - name: C2
    symm: -x,y,-z
---
# 'distance' can be measured between any objects, including centroids & shapes
distance: benzene_to_benzene_total
from:
  - name: benzene_A_centroid
  - name: benzene_B_centroid
---
distance: benzene_to_benzene_vertical
from:
  - name: benzene_common_plane_at_A
  - name: benzene_common_plane_at_B
---
# Calculate 'angle' between two to four objects, based on their type
angle: C2-C1-C2
from:
  - name: C2
  - name: C1
  - name: C2
    symm: -x,y,-z
---
angle: benzene_A_B_plane
from:
  - name: benzene_A_plane
  - name: benzene_B_plane
---
# 'write' results of all performed calculations into an excel-readable csv file
write: /path/to/results.csv
